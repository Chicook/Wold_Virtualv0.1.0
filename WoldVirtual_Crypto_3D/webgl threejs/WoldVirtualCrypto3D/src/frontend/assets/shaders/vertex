// filepath: metaverse-crypto-3d/src/frontend/assets/shaders/vertex
# Vertex shader for rendering 3D objects in the metaverse
# This shader handles vertex transformations and lighting calculations.

# Define the vertex shader
# Input attributes
attribute vec3 position; // Vertex position
attribute vec3 normal;   // Vertex normal
attribute vec2 uv;       // Texture coordinates

// Uniforms
uniform mat4 modelMatrix;      // Model transformation matrix
uniform mat4 viewMatrix;       // View transformation matrix
uniform mat4 projectionMatrix; // Projection transformation matrix

// Varying variables to pass data to the fragment shader
varying vec3 vNormal; // Normal vector for lighting calculations
varying vec2 vUv;     // Texture coordinates for the fragment shader

void main() {
    // Transform the vertex position to clip space
    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);
    
    // Pass the normal and UV coordinates to the fragment shader
    vNormal = normalize(mat3(modelMatrix) * normal);
    vUv = uv;
}